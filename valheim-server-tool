#!/bin/bash

# Valheim Server Tool
# Basic server management tasks for an already installed Valheim server.
# Available commands: stop, start, restart, status, backup, update

# tput colors: 0=black,1=red,2=green,3=yellow,4=blue,5=magenta,6=cyan,7=white,9=default
msginfo() { tput setaf 2; tput setab 0; echo "$(date +%Y%m%dt%H%M%S.%N) ${1}"; tput sgr0; }
msgwarn() { tput setaf 3; tput setab 0; echo "$(date +%Y%m%dt%H%M%S.%N) ${1}"; tput sgr0; }
msgdbug() { tput setaf 6; tput setab 0; echo "$(date +%Y%m%dt%H%M%S.%N) ${1}"; tput sgr0; }
msgerrr() { tput setaf 1; tput setab 0; tput bold; echo "$(date +%Y%m%dt%H%M%S.%N) ${1}"; tput sgr0; }

f_server_stop() {
    msginfo "Stopping Valheim server..."
    systemctl stop valheimserver.service
    msginfo "Valheim server is stopped."
}

f_server_start() {
    msginfo "Starting Valheim server."
    systemctl start valheimserver.service
    msginfo "Valheim server is started."
    msgwarn "Server may require several minutes before accepting connections."
}

f_server_restart() {
    msginfo "Restarting Valheim server."
    systemctl restart valheimserver.service
    msginfo "Valheim server is started."
    msgwarn "Server may require several minutes before accepting connections."
}

f_server_status() {
    msginfo "Valheim Server Status"
    systemctl --no-pager --full status valheimserver.service
}

f_server_backup() {
    InitialServiceState=$(systemctl is-active valheimserver.service)
    DateTimeStamp="$(date +%Y%m%dt%H%M%S)"
    SourcePath="/home/steam/.config/unity3d/IronGate/Valheim/worlds"
    BackupPath="/home/steam/ValheimBackup"
    FileName="ValheimBackup-${DateTimeStamp}.tgz"
    BackupCountLimit="-14" # should be negative due to usage in head command below
    # check server world files directory
    if [[ ! -d "${SourcePath}" ]]; then
        msgerrr "Server files not found. Exiting now."
        exit 1
    fi
    if [[ ${InitialServiceState} = "active" ]]; then f_server_stop; fi
    # create backup path if it doesn't exist
    if [[ ! -d "${BackupPath}" ]]; then
        msginfo "Creating backup directory..."
        mkdir -p "${BackupPath}" && chown -f steam:steam "${BackupPath}"
    fi
    # create backup
    msginfo "Backing up server world files..."
    sudo -u steam bash -c "tar -czf \"${BackupPath}/${FileName}\" \"${SourcePath}\" 2> /dev/null"
    # remove backups in excess of specified count
    msginfo "Removing excess backups..."
    find "${BackupPath}" -name "ValheimBackup*tgz" | sort | head -n ${BackupCountLimit} | xargs -r rm -f --
    if [[ ${InitialServiceState} = "active" ]]; then f_server_start; fi
    msginfo "Valheim server backup complete."
}

f_server_update() {
    InstallPath="/home/steam/valheimserver"
    if [[ ! -d "${InstallPath}" ]]; then
        msgerrr "Valheim server not found."
        msgerrr "Expected server path: ${InstallPath}"
        exit 1
    fi
    msginfo "Checking for updates..."
    # appinfo cache file must be deleted for version check to work.
    find "/home" "/root" -wholename "*/.steam/appcache/appinfo.vdf" | xargs -r rm -f --
    currentversion=$(/home/steam/steamcmd +login anonymous +app_info_update 1 +app_info_print 896660 +quit | tr -d '[:space:]' | sed -r 's/.*branches...public...buildid..([0-9]*)..timeupdated.*/\1/')
    installedversion=$(awk -F '"' '$2 == "buildid" {print $4}' /home/steam/valheimserver/steamapps/appmanifest_896660.acf)
    msginfo "Available Version: ${currentversion}"
    msginfo "Installed Version: ${installedversion}"
    if [[ "${currentversion}" = "${installedversion}" ]]; then
        msginfo "No update available."
        exit 1
    fi
    msginfo "An update is available. Install the update? (Yes/No)"
    read -r userinput
    if [[ "$userinput" =~ ^(Y|y|Yes|yes)$ ]]; then
        InitialServiceState=$(systemctl is-active valheimserver.service)
        if [[ ${InitialServiceState} = "active" ]]; then f_server_stop; fi
        msginfo "Updating Valheim server..."
        sudo -u steam /home/steam/steamcmd +login anonymous +force_install_dir "${InstallPath}" +app_update 896660 validate +exit
        chown -Rf steam:steam "${InstallPath}"
        msginfo "Valheim server update complete."
        if [[ ${InitialServiceState} = "active" ]]; then f_server_start; fi
    else
        msgwarn "Valheim server update cancelled."
        exit 1
    fi
}

f_usage() {
    echo "Valheim Server Tool"
    echo "Usage: $0 command"
    echo "Available commands: stop, start, restart, status, backup, update"
    exit 1
}

# verify authority. exit if not root.
if [[ $(id -u) -ne 0 ]]; then
    echo "Insufficient privileges."
    echo "This program requires root authority. Try again with sudo. Exiting now."
    exit 1
fi

command="${1}"
case "${command}" in
    (stop) f_server_stop ;;
    (start) f_server_start ;;
    (restart) f_server_restart ;;
    (status) f_server_status ;;
    (backup) f_server_backup ;;
    (update) f_server_update ;;
    (*) f_usage ; exit 1 ;;
esac
